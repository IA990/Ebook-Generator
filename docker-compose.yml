version: '3.8'

services:
  frontend:
    image: nginx:latest
    container_name: ebook_frontend
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    networks:
      - ebook_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ebook_backend
    environment:
      - NODE_ENV=production
      - PORT=3000
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    ports:
      - "3000:3000"
    depends_on:
      - redis
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    networks:
      - ebook_network

  redis:
    image: redis:alpine
    container_name: ebook_redis
    ports:
      - "6379:6379"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - ebook_network

  prometheus:
    image: prom/prometheus:latest
    container_name: ebook_prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    networks:
      - ebook_network

networks:
  ebook_network:
    driver: bridge
